# -*- coding: utf-8 -*-
"""EDA-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZytbuqH4nu9qVaSNdlUF9_6AvVzvkhOF
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
plt.rcParams["figure.figsize"] = (10, 6)
plt.rcParams["figure.dpi"] = 300
# %matplotlib inline
import warnings
warnings.filterwarnings("ignore")

df = pd.read_csv("/content/data_clean1.csv")

df

df.head()

df.tail(10)

df.describe()

df.describe(include="object")

df.dtypes

df.info()

df["Month"]

df["Month"].unique()

df['Month'].value_counts()

df["Month"].replace("May","5",inplace=True)

df["Month"].unique()

df.dtypes

df['Month'].astype(int)

df.dtypes

df['Month'] = df['Month'].astype(int)

df.dtypes

df

df.duplicated()

df.duplicated().sum()

df[df.duplicated()]

df[df.duplicated(keep=False)]  #keep(first,last,false)

df.drop_duplicates(inplace=True)

df.shape

df.duplicated()

df.duplicated().sum()

df.head()

df['Year'].unique()

df["Year"].value_counts()

df.drop(columns=["Year"],inplace=True)

df.head()

df.drop(columns=["Ozone","Month"])

df

df.drop(index=[1])

df.drop(index=[1,3])

df.head()

df

df.rename(columns={"Temp" : "Temperature","Solar.R" : "Solar"},inplace=True)

df

df.head()

df.isna()

df.isna().sum()

df.isnull().sum()

sns.heatmap(df.isnull())

len(df)

for i in df.isna().sum():
  print((i/len(df))*100)

df.head()

df.hist()
plt.tight_layout()

df.boxplot()

sns.boxplot(x = df.Wind)

sns.boxplot(x = df.Ozone)

ozone_median = df["Ozone"].median()
ozone_median

df["Ozone"].fillna(ozone_median,inplace=True)

df.isna().sum()

df["Solar"].mean()

df["Solar"].fillna(df["Solar"].mean(),inplace=True)

df.isna().sum()

df["Weather"].unique()

df["Weather"].value_counts()

df["Weather"].mode()

df["Weather"].mode()[0]

df["Weather"].fillna(df["Weather"].mode()[0],inplace=True)

df.isna().sum()

df['Weather'].value_counts()

df.describe()

df.hist()
plt.tight_layout()

df.boxplot()

sns.boxplot(x = df.Ozone)

df["Ozone"].quantile(0.25)

df["Ozone"].quantile(0.75)

def outlier_detection(data,colname):
  q1 = data[colname].quantile(0.25)
  q3 = data[colname].quantile(0.75)
  iqr = q3 - q1
  lower_extreme = q1 - (1.5 * iqr)
  upper_extreme = q3 + (1.5 * iqr)

  return lower_extreme,upper_extreme

outlier_detection(df,"Ozone")

outlier_detection(df,"Wind")

df[df["Ozone"]>81.0]

df[df["Ozone"]>81.0].shape[0]

len(df[df["Ozone"]>81.0])

df.loc[df["Ozone"]>81.0,"Ozone"]

df.loc[df["Ozone"]>81.0,"Ozone"] = 81.0

df[df["Ozone"] > 81.0]

df[df["Ozone"] == 81.0]

outlier_detection(df,"Wind")

sns.boxplot ( x = df["Wind"])

df[df["Wind"] > 17.65]

df.loc[df["Wind"] > 17.65,"Wind"] = 17.65

df.boxplot()

df.shape

df.head()

sns.pairplot(df)

df.drop(columns=['Weather']).corr()

sns.heatmap(df.drop(columns=['Weather']).corr())

sns.heatmap(df.drop(columns=['Weather']).corr(),annot=True)

sns.heatmap(df.drop(columns=['Weather']).corr(),annot=True,cmap="viridis")

sns.heatmap(df.drop(columns=['Weather']).corr(),annot=True,cmap="rainbow")

sns.heatmap(df.drop(columns=['Weather']).corr(),annot=True,cmap="crest")

df.head()

df = pd.get_dummies(df, columns=["Weather"])

df

from sklearn.preprocessing import StandardScaler, MinMaxScaler

sc = StandardScaler()

sc.fit_transform(df)

pd.DataFrame(sc.fit_transform(df))

df.columns

scaled_df = pd.DataFrame(sc.fit_transform(df),columns=df.columns)

scaled_df

scaled_df.describe()

mn = MinMaxScaler()

df.columns

minmax_scale = pd.DataFrame(mn.fit_transform(df),columns=df.columns)
minmax_scale

minmax_scale.describe()

!pip install pandas_profiling==3.1.0
!pip install -U ydata-profiling
!pip install sweetviz

import pandas_profiling as pp
import sweetviz as sv
#import joblib

df = pd.read_csv("/content/data_clean.csv",index_col=0)
df.head(4)

EDA_report =pp.ProfileReport(df)
EDA_report

